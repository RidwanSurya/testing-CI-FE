name: Frontend CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test-lint-analyze-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ‚úÖ Caching dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          npm ci

      - name: Run ESLint
        run: |
          echo "üîç Running ESLint..."
          npm run lint || echo "::warning::Linting failed, check your code style!"
        continue-on-error: true

      - name: Run Unit Tests
        run: |
          echo "üß™ Running Unit Tests..."
          npm test

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: jrtr1/wandoor-frontend-app:frontend-latest

      # Optional deploy step
      # - name: Deploy via SSH
      #   uses: appleboy/ssh-action@v0.1.10
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       docker pull ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest
      #       docker stop frontend || true
      #       docker rm frontend || true
      #       docker run -d -p 3000:3000 --name frontend ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest
